Aim:Write a selenium java program to demonstrate Data Driven Testing.
Code:
Pom.xml:
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/
XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 
https://maven.apache.org/xsd/maven-4.0.0.xsd">
 <modelVersion>4.0.0</modelVersion>
 <groupId>Test</groupId>
 <artifactId>Da_Dri</artifactId>
 <version>0.0.1-SNAPSHOT</version>
 <name>Data_Driven</name>
 <dependencies>
<dependency>
<groupId>org.testng</groupId>
<artifactId>testng</artifactId>
<version>7.4.0</version>
</dependency>
<dependency>
<groupId>io.github.bonigarcia</groupId>
<artifactId>webdrivermanager</artifactId>
<version>5.8.0</version>
</dependency>
<dependency>
<groupId>org.seleniumhq.selenium</groupId>
<artifactId>selenium-java</artifactId>
<version>4.19.1</version>
</dependency>
<dependency>
 <groupId>org.apache.poi</groupId>
 <artifactId>poi</artifactId>
 <version>4.1.1</version>
 </dependency>
 <dependency>
 <groupId>org.apache.poi</groupId>
 <artifactId>poi-ooxml</artifactId>
 <version>4.1.1</version>
 </dependency>
 <dependency>
 <groupId>org.slf4j</groupId>
 <artifactId>slf4j-api</artifactId>
 <version>1.7.5</version>
</dependency>
<dependency>
 <groupId>org.slf4j</groupId>
 <artifactId>slf4j-simple</artifactId>
 <version>1.7.5</version>
</dependency>
 </dependencies>
</project>


Testing.java:

package aditya;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.testng.Assert;
import org.testng.annotations.Test;
import io.github.bonigarcia.wdm.WebDriverManager;
public class Testing {
@Test(dataProvider = "loginData", dataProviderClass = ExcelDataSupplier.class)
public void TestLogin(String userName, String password) throws Exception {
//WebDriverManager.chromedriver().setup();
WebDriver driver = new ChromeDriver();
driver.manage().window().maximize();
driver.get("https://github.com/login");
driver.findElement(By.name("login")).sendKeys(userName);
driver.findElement(By.name("password")).sendKeys(password);
driver.findElement(By.name("commit")).click();
Thread.sleep(5000);
driver.quit();
}
}
ExcelDataSupplier.java:
package aditya;
import java.io.File;
import java.io.FileInputStream;
import java.util.Arrays;
import org.apache.poi.ss.usermodel.DataFormatter;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.testng.annotations.DataProvider;
public class ExcelDataSupplier {
@DataProvider(name="loginData")
public String[][] getData() throws Exception {
File excelFile = new File("./src/test/resources/Test.xlsx");
FileInputStream fis = new FileInputStream(excelFile);
XSSFWorkbook workbook = new XSSFWorkbook(fis);
XSSFSheet sheet = workbook.getSheet("Sheet1");
int noOfRows = sheet.getPhysicalNumberOfRows();
int noOfColumns = sheet.getRow(0).getLastCellNum();
String[][] data = new String[noOfRows-1][noOfColumns];
for (int i = 0; i < noOfRows-1; i++) {
for (int j = 0; j < noOfColumns; j++) {
DataFormatter df = new DataFormatter();
data[i][j] = df.formatCellValue(sheet.getRow(i+1).getCell(j));
}
}
workbook.close();
fis.close();
for (String[] dataArr : data) {
System.out.println(Arrays.toString(dataArr));
}
return data;
}
}
